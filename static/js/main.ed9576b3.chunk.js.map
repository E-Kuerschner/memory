{"version":3,"sources":["images/alice.svg","images/anticslab.svg","images/arbutusslab.svg","images/bigcaslon.svg","images/biorhyme.svg","images/cormorant.svg","images/ebgaramond.svg","images/firasans.svg","images/helveticaneue.svg","images/inter.svg","images/karla.svg","images/lora.svg","images/sourceserifpro.svg","images/spectral.svg","images/worksans.svg","Components/Data.js","Components/Card.js","Components/Gameboard.js","Components/Score.js","images/logo.svg","Components/Header.js","Components/Message.js","images/divider.svg","App.js","index.js"],"names":["Data","id","src","alice","anticslab","arbutusslab","bigcaslon","biorhyme","cormorant","ebgaramond","firasans","helveticaneue","inter","karla","lora","sourceserifpro","spectral","worksans","Card","props","className","data-id","alt","onClick","handleCardClick","Gameboard","grid","cards","map","item","index","toString","Score","score","topScore","Header","logo","Message","win","App","useState","setScore","clicked","setClicked","pastScores","setPastScores","setTopScore","setWin","array","i","length","j","Math","floor","random","shuffleArray","useEffect","max","displayValueTopScore","divider","isCard","card","findIndex","indexInCardsData","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ed9576b3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/alice.ee8ca8e6.svg\";","export default __webpack_public_path__ + \"static/media/anticslab.75724f7c.svg\";","export default __webpack_public_path__ + \"static/media/arbutusslab.7ba7f958.svg\";","export default __webpack_public_path__ + \"static/media/bigcaslon.72d3a36d.svg\";","export default __webpack_public_path__ + \"static/media/biorhyme.5c081e97.svg\";","export default __webpack_public_path__ + \"static/media/cormorant.70bb936f.svg\";","export default __webpack_public_path__ + \"static/media/ebgaramond.3dcfa385.svg\";","export default __webpack_public_path__ + \"static/media/firasans.68e80779.svg\";","export default __webpack_public_path__ + \"static/media/helveticaneue.793011bf.svg\";","export default __webpack_public_path__ + \"static/media/inter.0247ad8f.svg\";","export default __webpack_public_path__ + \"static/media/karla.4f10b853.svg\";","export default __webpack_public_path__ + \"static/media/lora.a3dcb301.svg\";","export default __webpack_public_path__ + \"static/media/sourceserifpro.af83547c.svg\";","export default __webpack_public_path__ + \"static/media/spectral.9482ef08.svg\";","export default __webpack_public_path__ + \"static/media/worksans.a44627a4.svg\";","import alice from '../images/alice.svg';\nimport anticslab from '../images/anticslab.svg';\nimport arbutusslab from '../images/arbutusslab.svg'; \nimport bigcaslon from '../images/bigcaslon.svg';\nimport biorhyme from '../images/biorhyme.svg';\nimport cormorant from '../images/cormorant.svg';\nimport ebgaramond from '../images/ebgaramond.svg';\nimport firasans from '../images/firasans.svg';\nimport helveticaneue from '../images/helveticaneue.svg';\nimport inter from '../images/inter.svg';\nimport karla from '../images/karla.svg';\nimport lora from '../images/lora.svg';\nimport sourceserifpro from '../images/sourceserifpro.svg';\nimport spectral from '../images/spectral.svg';\nimport worksans from '../images/worksans.svg';\n\nconst Data = function() {\n    const cards = \n        [\n            {\n                id: 1,\n                src: alice\n            },\n            {\n                id: 2,\n                src: anticslab\n            },\n            {\n                id: 3,\n                src: arbutusslab\n            },\n            {\n                id: 4,\n                src: bigcaslon\n            },\n            {\n                id: 5,\n                src: biorhyme\n            },\n            {\n                id: 6,\n                src: cormorant\n            },\n            {\n                id: 7,\n                src: ebgaramond\n            },\n            {\n                id: 8,\n                src: firasans\n            },\n            {\n                id: 9,\n                src: helveticaneue\n            },\n            {\n                id: 10,\n                src: inter\n            },\n            {\n                id: 11,\n                src: karla\n            },\n            {\n                id: 12,\n                src: lora\n            },\n            {\n                id: 13,\n                src: sourceserifpro\n            },\n            {\n                id: 14,\n                src: spectral\n            },\n            {\n                id: 15,\n                src: worksans\n            }\n        ];\n    return cards;\n}\n\nexport default Data;","function Card(props) {\n  return (\n    <div className=\"Card\">\n      <img \n        data-id={props.id} \n        src={props.src} \n        alt=\"\" \n        onClick={() => props.handleCardClick(props.id)} />\n    </div>\n  );\n}\n  \n  export default Card;","import Card from \"./Card\";\n\nfunction Gameboard(props) {\n    const cards = props.cards;\n    const grid = cards.map((item, index) =>\n        <Card key={index.toString()} src={item.src} id={item.id} handleCardClick={props.handleCardClick} />\n    );\n    return (\n        <div className=\"Gameboard\">\n            {grid}\n        </div>\n    );\n}\n\nexport default Gameboard;","function Score(props) {\n    return (\n        <div className=\"Score\">\n            {props.score}\n            <div>\n                <p className=\"label\">\n                    <span id=\"leftarrow\"></span>Score\n                </p>\n                <p className=\"label\">\n                    High<span id=\"rightarrow\"></span>\n                </p>\n            </div>\n            {props.topScore}\n        </div>\n    )\n}\n\nexport default Score;","export default __webpack_public_path__ + \"static/media/logo.8ff49731.svg\";","import Score from './Score'\nimport logo from '../images/logo.svg'\n\nfunction Header(props) {\n  return (\n    <div className=\"Header\">\n      <img className=\"logo\" src={logo} alt=\"Memory logo\"/>\n      <p className=\"instructions\">\n        How's your eagle eye? Try to click every card without clicking the same one twice.\n      </p>\n      <Score \n      topScore={props.topScore}\n      score={props.score} />\n    </div>\n  );\n}\n\nexport default Header;\n","function Message(props) {\n    const win = props.win;\n    if (win) {\n        return (\n            <div className=\"Message\">\n                {\"You won!\"}\n            </div>\n        )   \n    } else {\n        return (\n            <div className=\"Message hidden\"></div>\n        )\n    }\n}\n\nexport default Message;","export default __webpack_public_path__ + \"static/media/divider.91b6a99e.svg\";","import Data from './Components/Data';\nimport Gameboard from './Components/Gameboard';\nimport { useState, useEffect } from 'react';\nimport './App.css';\nimport Header from './Components/Header';\nimport Message from './Components/Message'\nimport divider from './images/divider.svg'\n\nfunction App() {\n  const [score, setScore] = useState(0);\n  const [clicked, setClicked] = useState([]); //keeps track of every card you've clicked this game\n  const [pastScores, setPastScores] = useState([]); //derived from score at game end\n  const [topScore, setTopScore] = useState(null); //dependent on pastScores\n  const [win, setWin] = useState(false); //dependent on score\n\n  const shuffleArray = function(array) {\n    for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n  }\n  \n  //Get a shuffled array of Card objects, each with an id property and a src property\n  const cards = shuffleArray(Data()); \n\n  const handleCardClick = function(id) {\n    //Compare the passed id with the Card id properties already contained in state. \n    const isCard = (card) => card.id === id;\n    const indexInState = clicked.findIndex(isCard);\n\n    if (indexInState === -1) {\n      //If no match, the passed id is compared with all the Card id properties in Data, \n      //and the matching Card object is added to state.\n      const indexInCardsData = cards.findIndex(isCard);\n      setClicked([...clicked, cards[indexInCardsData]]);\n      setScore(score + 1);\n    } else {\n      //If there's a match (i.e., you've already clicked this card), then the game ends. \n      setPastScores([...pastScores, score]);\n      setScore(0);\n      setClicked([]);\n    }\n  }\n\n  //determine if there was a win or not\n  useEffect(() => {\n    if (score === 15) {\n      setWin(true);\n    } else {\n      setWin(false);\n    }\n  }, [score]);\n\n  //get the top score from your past scores, or keep the top score null if there are no past scores\n  useEffect(() => {\n    const topScore = (pastScores.length > 0) ? Math.max(...pastScores) : null;\n    setTopScore(topScore);\n  }, [pastScores])\n\n  //display 0 to the user instead of null\n  const displayValueTopScore = topScore ? topScore : 0;\n\n  return (\n    <div className=\"App\">\n      <Message\n        win={win} />\n      <Header \n        topScore={displayValueTopScore}\n        score={score} />\n      <img className=\"divider\" src={divider} alt=\"Divider line\" />\n      <Gameboard \n        cards={cards}\n        handleCardClick={handleCardClick} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}